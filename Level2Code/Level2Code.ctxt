#BlueJ class context
comment0.target=Level2Code
comment0.text=\n\ Write\ a\ description\ of\ class\ Level2Code\ here.\n\n\ @author\ (your\ name)\n\ @version\ (a\ version\ number\ or\ a\ date)\n
comment1.params=
comment1.target=Level2Code()
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ Level2Code\n
comment10.params=
comment10.target=int\ SchleifeMitContinue()
comment10.text=\n\ Schleife\ mit\ Continue\n
comment11.params=
comment11.target=int\ SchleifeOhneContinue()
comment11.text=\n\ Schleife\ ohne\ Continue\n
comment12.params=
comment12.target=int\ SchleifeMitBreak()
comment12.text=\n\ Schleife\ mit\ break\n
comment13.params=
comment13.target=int\ SchleifeOhneBreak()
comment13.text=\n\ Schleife\ ohne\ break\n
comment14.params=
comment14.target=java.lang.String\ FirstWithString()
comment14.text=\n\ Strings\n
comment15.params=
comment15.target=java.lang.String\ CompareStrings()
comment15.text=\n\ Strings\ vergleichen\n
comment16.params=
comment16.target=int\ charAtMethode()
comment16.text=\n\ Strings\ charAt\ Methode\n
comment17.params=
comment17.target=int\ Stringlength()
comment17.text=\n\ Strings\ length\ Methode\n
comment18.params=
comment18.target=java.lang.String\ subStringMethode1()
comment18.text=\n\ Strings\ subString\ 1\n
comment19.params=
comment19.target=java.lang.String\ subStringMethode2()
comment19.text=\n\ Strings\ subString\ 2\n
comment2.params=Martikelnummer\ name\ city
comment2.target=Level2Code(int,\ java.lang.String,\ java.lang.String)
comment2.text=\n\ Constructor\ for\ objects\ of\ class\ Level2Code\n
comment20.params=
comment20.target=int\ indexOfMethode()
comment20.text=\n\ Strings\ indexOf\ Methode\n
comment21.params=Martikelnummer\ name\ city
comment21.target=java.lang.String\ toString(int,\ java.lang.String,\ java.lang.String)
comment21.text=\n\ Strings\ toString\ Methode\n
comment22.params=Martikelnummer\ name\ city
comment22.target=java.lang.String\ toStringMethode(int,\ java.lang.String,\ java.lang.String)
comment23.params=s
comment23.target=java.lang.StringBuilder\ append(java.lang.String)
comment23.text=\n\ StringBuilder\ append\ Strings\n
comment24.params=c
comment24.target=java.lang.StringBuilder\ append(char)
comment24.text=\n\ StringBuilder\ append\ char\n
comment25.params=p
comment25.target=int\ Fakult\u00E4tRekusivBerechnung(int)
comment25.text=\n\ Rekursionbeispiel\ 1\:\ Fakult\u00E4tberechnung\n
comment26.params=n
comment26.target=int\ Fakult\u00E4tRekusivBerechnungMitFor(int)
comment26.text=\n\ Rekursionbeispiel\ 2\:\ Fakult\u00E4tberechnungMitForSchleife\n
comment27.params=s\ c
comment27.target=boolean\ suche(java.lang.String,\ char)
comment27.text=\n\ Rekursionbeispiel\ 3\:\ Substring\ und\ charAt\n
comment28.params=s
comment28.target=boolean\ doppelte(java.lang.String)
comment28.text=\n\ Rekursionbeispiel\ 4\:\ Zeichen\ in\ String\ doppelt\ \n\ vorkommen\n
comment29.params=l
comment29.target=void\ bar(Level2Code)
comment29.text=\n\ Stackbeispiel\n
comment3.params=color\ speed
comment3.target=Level2Code(java.lang.String,\ int)
comment3.text=\n\ Constructor\ for\ objects\ of\ class\ Level2Code\n
comment30.params=p
comment30.target=int\ foo(int)
comment31.params=fourWheel
comment31.target=void\ drive(boolean)
comment31.text=\n\ Class\ Scopes\n
comment32.params=
comment32.target=java.lang.String\ toString()
comment33.params=fourWheel
comment33.target=java.lang.String\ driveAgain(boolean)
comment33.text=\n\ Method\ Scopes\n
comment34.params=newColor\ oldColor
comment34.target=java.lang.String\ paint(java.lang.String,\ java.lang.String)
comment35.params=
comment35.target=int\ changeTires()
comment35.text=\n\ Block\ Scopes\n
comment36.params=
comment36.target=int\ Fakult\u00E4tMitForSchleife()
comment36.text=\n\ For\ Schleife\ Scopes\n
comment37.params=
comment37.target=void\ TCArrayOutOfBounceException()
comment37.text=\n\ Try\ catch\ ArrayIndexOutOfBounceException\n
comment38.params=
comment38.target=void\ TCIllegalArgumentException()
comment38.text=\n\ Try\ catch\ IllegalArgumentException\n
comment39.params=
comment39.target=void\ TCIllegalStateException()
comment39.text=\n\ Try\ catch\ IllegalStateException\n
comment4.params=x\ y
comment4.target=int\ Fallunterscheidung(int,\ int)
comment4.text=\n\ Fallunterscheidung\ mit\ if\n
comment40.params=
comment40.target=void\ TCIndexOutOfBounceException()
comment40.text=\n\ Try\ catch\ IndexOutOfBounceException\n
comment41.params=
comment41.target=void\ TCNullPointerException()
comment41.text=\n\ Try\ catch\ NullPointerException\n
comment42.params=
comment42.target=void\ OutOfMoemoryError()
comment42.text=\n\ Try\ catch\ OutOfMoemoryError\n
comment43.params=
comment43.target=void\ SayHi()
comment43.text=\n\ Try\ catch\ StackOverflowError\n
comment44.params=
comment44.target=void\ TCStackOverflowError()
comment45.params=
comment45.target=void\ TCFinallyBlock()
comment45.text=\n\ Finally\ Block\ with\ Try\ Catch\n
comment5.params=x\ y
comment5.target=int\ Wiederholung(int,\ int)
comment5.text=\n\ Wiederholung\n
comment6.params=monat\ jahr
comment6.target=void\ tageProMonat(int,\ int)
comment6.text=\n\ Switch\ case\n
comment7.params=
comment7.target=void\ DoWhileSchleife()
comment7.text=\n\ Do\ while\ Schleife\n
comment8.params=i
comment8.target=int\ ForSchleife(int)
comment8.text=\n\ For\ Schleife,\ Z\u00E4hlschleife\ mit\ ASCII\n
comment9.params=
comment9.target=int\ WhileSchleife()
comment9.text=\n\ While\ Schleife\n
numComments=46
